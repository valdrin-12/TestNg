<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="14" passed="12" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-28T23:06:54 CEST" name="Loan Department" finished-at="2023-04-28T23:06:54 CEST" duration-ms="481">
    <groups>
      <group name="Smoke">
        <method signature="Day.demo()[pri:0, instance:testng1.Day@4f638935]" name="demo" class="testng1.Day"/>
        <method signature="day1.demo()[pri:0, instance:testng1.day1@2aa3cd93]" name="demo" class="testng1.day1"/>
        <method signature="day2.WebLogin()[pri:0, instance:testng1.day2@3c9d0b9d]" name="WebLogin" class="testng1.day2"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2023-04-28T23:06:54 CEST" name="Personal loan" finished-at="2023-04-28T23:06:54 CEST" duration-ms="188">
      <class name="testng1.day1">
        <test-method is-config="true" signature="firsttest()[pri:0, instance:testng1.day1@2aa3cd93]" started-at="2023-04-28T23:06:54 CEST" name="firsttest" finished-at="2023-04-28T23:06:54 CEST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firsttest -->
        <test-method signature="demo()[pri:0, instance:testng1.day1@2aa3cd93]" started-at="2023-04-28T23:06:54 CEST" name="demo" finished-at="2023-04-28T23:06:54 CEST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
      </class> <!-- testng1.day1 -->
      <class name="testng1.Day">
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testng1.Day@4f638935]" started-at="2023-04-28T23:06:54 CEST" name="beforemethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="demo()[pri:0, instance:testng1.Day@4f638935]" started-at="2023-04-28T23:06:54 CEST" name="demo" finished-at="2023-04-28T23:06:54 CEST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testng1.Day@4f638935]" started-at="2023-04-28T23:06:54 CEST" name="aftermethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:testng1.Day@4f638935]" started-at="2023-04-28T23:06:54 CEST" name="aftertest" finished-at="2023-04-28T23:06:54 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- testng1.Day -->
      <class name="testng1.day3">
        <test-method signature="ApiLoginHome()[pri:0, instance:testng1.day3@7ea37dbf]" started-at="2023-04-28T23:06:54 CEST" name="ApiLoginHome" finished-at="2023-04-28T23:06:54 CEST" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApiLoginHome -->
        <test-method signature="MobileLoginHome()[pri:0, instance:testng1.day3@7ea37dbf]" started-at="2023-04-28T23:06:54 CEST" name="MobileLoginHome" finished-at="2023-04-28T23:06:54 CEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHome -->
        <test-method signature="WebLoginHome()[pri:0, instance:testng1.day3@7ea37dbf]" started-at="2023-04-28T23:06:54 CEST" name="WebLoginHome" finished-at="2023-04-28T23:06:54 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginHome -->
      </class> <!-- testng1.day3 -->
    </test> <!-- Personal loan -->
    <test started-at="2023-04-28T23:06:54 CEST" name="Car loan" finished-at="2023-04-28T23:06:54 CEST" duration-ms="162">
      <class name="testng1.Day">
        <test-method is-config="true" signature="beforesuite()[pri:0, instance:testng1.Day@4f638935]" started-at="2023-04-28T23:06:54 CEST" name="beforesuite" finished-at="2023-04-28T23:06:54 CEST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuite -->
        <test-method is-config="true" signature="aftersuite()[pri:0, instance:testng1.Day@4f638935]" started-at="2023-04-28T23:06:54 CEST" name="aftersuite" finished-at="2023-04-28T23:06:54 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- testng1.Day -->
      <class name="testng1.day2">
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="beforeclass" finished-at="2023-04-28T23:06:54 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="beforemethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="ApiLogin(java.lang.String,java.lang.String)[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="ApiLogin" data-provider="getData" finished-at="2023-04-28T23:06:54 CEST" duration-ms="30" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApiLogin -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="aftermethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="beforemethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="ApiLogin(java.lang.String,java.lang.String)[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="ApiLogin" data-provider="getData" finished-at="2023-04-28T23:06:54 CEST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApiLogin -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="aftermethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="beforemethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="ApiLogin(java.lang.String,java.lang.String)[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="ApiLogin" data-provider="getData" finished-at="2023-04-28T23:06:54 CEST" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApiLogin -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="aftermethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="WebLogin()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="WebLogin" finished-at="2023-04-28T23:06:54 CEST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLogin -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="beforemethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="aftermethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="beforemethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="MobileLogin1(java.lang.String)[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="MobileLogin1" finished-at="2023-04-28T23:06:54 CEST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaclick.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogin1 -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="aftermethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="beforemethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="MobileLogin2()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="MobileLogin2" finished-at="2023-04-28T23:06:54 CEST" duration-ms="4" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at testng1.day2.MobileLogin2(day2.java:57)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogin2 -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="aftermethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="MobileLogin3()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="MobileLogin3" finished-at="2023-04-28T23:06:54 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogin3 -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="beforemethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="aftermethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="beforemethod()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="beforemethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method signature="MobileLogin()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="MobileLogin" finished-at="2023-04-28T23:06:54 CEST" depends-on-methods="testng1.day2.WebLogin" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogin -->
        <test-method is-config="true" signature="aftermethod()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="aftermethod" finished-at="2023-04-28T23:06:54 CEST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="aftereclass()[pri:0, instance:testng1.day2@3c9d0b9d]" started-at="2023-04-28T23:06:54 CEST" name="aftereclass" finished-at="2023-04-28T23:06:54 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftereclass -->
      </class> <!-- testng1.day2 -->
    </test> <!-- Car loan -->
  </suite> <!-- Loan Department -->
</testng-results>
